version: "3.8"
services:

  gateway:
    restart: always
    image: nginx:1.19.8-alpine
    ports:
      - 8081:8080
    networks:
      - backend
    volumes:
      - ./Gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./Gateway/api_conf.d:/etc/nginx/api_conf.d
      - ./Gateway/api_backends.conf:/etc/nginx/api_backends.conf
      - ./Gateway/api_gateway.conf:/etc/nginx/api_gateway.conf
      - ./Gateway/api_json_errors.conf:/etc/nginx/api_json_errors.conf

  user-service:
    restart: always
    build:
      context: ./SpringBootMicroservice
      dockerfile: Dockerfile
    networks:
          - backend
    depends_on:
          - user-service-db
    environment:
          - SPRING_DATASOURCE_URL=jdbc:postgresql://user-service-db:5432/xwsusersdb
          - SPRING_DATASOURCE_USERNAME=postgres
          - SPRING_DATASOURCE_PASSWORD=admin
          - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop

  user-service-db:
    networks:
          - backend
    image: postgres:latest
    environment:
          - POSTGRES_PASSWORD=admin
          - POSTGRES_USER=postgres
          - POSTGRES_DB=xwsusersdb
    restart: always
    ports:
      - 5434:5432
    volumes:
      - user-service-db-volume:/var/lib/postgresql/data

  content-service:
    restart: always
    build:
      context: ./ContentService
      dockerfile: Dockerfile
    networks:
          - backend
    depends_on:
          - content-service-db
    environment:
          - MONGO_PATH=mongodb://content-service-db:27017
    volumes:
          - content-service-file-volume:/dist/post-content/

  content-service-db:
    networks:
      - backend
    image: mongo:4.4.5
    restart: always
    ports:
      - 27018:27017
    volumes:
      - content-service-db-volume:/data/db

volumes: 
  content-service-file-volume: 
    
  content-service-db-volume:
    
  user-service-db-volume:

networks:
  backend:
    name: nistagram
    driver: bridge

